name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  build:
    env:
      NODE_ENV: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['20.x']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: test
        run: cat tsconfig.json

      - name: test2
        run: ls -l src/assets/images/

      - name: Install pnpm
        run: npm install -g pnpm@9.9.0

      - name: remove cache
        run: pnpm store prune

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          # cache: 'pnpm'

      # - name: Cache pnpm Store
      #   uses: actions/cache@v4
      #   with:
      #       path: ~/.pnpm-store
      #       key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
      #       restore-keys: |
      #         pnpm-store-${{ runner.os }}-

      # - name: Cache Next.js Build
      #   uses: actions/cache@v4
      #   with:
      #     path: .next/cache
      #     key: nextjs-build-${{ runner.os }}-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx') }}
      #     restore-keys: |
      #         nextjs-build-${{ runner.os }}-

      - name: Install Dependencies
        run: pnpm install

      - name: Lint Check
        run: pnpm lint

      - name: TypeScript Check
        run: pnpm tsc --noEmit

      - name: Run Tests
        run: pnpm test